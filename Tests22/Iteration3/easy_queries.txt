1 - Follows, Follows, 2 common synonym (Valid)
stmt s, s1; assign a;
Select s such that Follows(s, s1) and Follows(s, s1)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 19, 21, 22, 25, 26, 30, 32
5000
2 - Follows, Follows*, no common synonym (Valid)
stmt s; read r; assign a;
Select a.stmt# such that Follows(s, a) such that Follows*(a, r)
4, 5, 6, 7, 32
5000
3 - Follows, Parent, no common synonym (Valid)
print p; stmt s; assign a; while w;
Select p.stmt# such that Follows(p, s) and Parent(w, a)
1, 13
5000
4 - Follows, Parent*, 1 common synonym (Valid)
call c; stmt s; while w;
Select c.procName such that Follows(s, c) such that Parent*(w, c)
K
5000
5 - Follows, Uses, 1 common synonym (Valid)
if ifs; assign a; stmt s;
Select ifs.stmt# such that Follows(s, ifs) and Uses(ifs, "J")
16, 26
5000
6 - Follows, Modifies, 1 common synonym (Valid)
while w; assign a; stmt s;
Select w.stmt# such that Follows(s, w) such that Modifies(w, "hH")
2, 14
5000
7 - Follows, Calls, no common synonym (Valid)
stmt s; call c; procedure p, q;
Select c.procName such that Follows(c, s) and Calls(p, q)
K
5000
8 - Follows, Calls*, no common synonym, fixed procName (Valid)
stmt s; prog_line n; procedure p;
Select n such that Follows(n, s) and Calls*("I", "K")
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 19, 21, 22, 25, 26, 30, 32
5000
9 - Follows, Next, no common synonyms (Valid)
prog_line n, n1; while w; print p; 
Select p.varName such that Follows(p, w) such that Next(n , n1)
TG, hH
5000
10 - Follows, Next*, 1 common synonyms (Valid)
stmt s; prog_line n; read r; assign a;
Select BOOLEAN such that Follows(s, a) and Next*(s, r)
TRUE
5000
11 - Follows, Affects (Valid)
stmt s; assign a1, a2; prog_line n;
Select <a1, a2> such that Follows(s, n) such that Affects(a1, a2)
15 19, 15 21, 21 23
5000
12 - Follows, Affects*, pattern, no common synonyms (Valid)
stmt s, s1; assign a, a1; variable v;
Select a such that Follows(s, s1) and Affects*(a, a1) pattern a(v, _"J"_)
21
5000
13 - Follows, Affects (Invalid; no and before pattern)
stmt s, s1; variable v; assign a, a1;
Select BOOLEAN such that Follows(s, s1) and pattern a("M", "74+42") such that Affects(a, a1)
none
5000
14 - Follows*, Follows, with (Valid)
assign a, a1; stmt s;
Select a with 30 = a.stmt# such that Follows*(a, a1) and Follows(s, 10)
30
5000
15 - Follows*, Follows*, with s.stmt# = n (Valid)
prog_line n; assign a; stmt s;
Select n with a.stmt# = n such that Follows*(n, s) and Follows*(a, 9)
4, 5, 6, 7
5000
16 - Follows*, Parent, pattern (Valid)
assign a; if ifs; stmt s; variable v;
Select <ifs, a> such that Follows*(s, a) such that Parent(ifs, a) pattern a(v, _"J"_)
18 23
5000
17 - Follows*, Parent*, pattern while (Valid)
stmt s; assign a; while w;
Select w such that Follows*(s, a) and Parent*(w, a) pattern w("M", _)
24
5000
18 - Follows*, Uses, with attr = IDENT (Valid)
assign a; variable v; stmt s;
Select a such that Follows*(s, a) such that Uses(a, v) with v.varName = "kA"
6
5000
19 - Follows*, Modifies, pattern if (Valid)
stmt s; if ifs; read r;
Select r.varName such that Follows*(r, ifs) pattern ifs("kA", _, _) such that Modifies(r, "TG")
TG
5000
20 - Follows*, Calls, with IDENT = proc.attr (Valid)
stmt s; while w; procedure p, q;
Select <w, p> such that Follows*(s, w) and Calls(p, q) with "K" = q.procName
2 Hc,2 I,14 Hc,14 I
5000
21 - Follows*, Calls*, constant.value = stmt.stmt# (Valid)
stmt s; procedure p, q; constant c; while w; assign a;
Select s with c.value = s.stmt# such that Follows*(s, a) such that Calls*(p, q)
4, 6
5000
22 - Follows*, Next, print all constants, no common synonyms (Valid)
stmt s; prog_line n, n1; constant c;
Select c such that Follows*(n, n1) and Next(9, 2)
74, 6, 4, 42
5000
23 - Follows*, Next*, fixed stmt# for all (Valid)
procedure p;
Select p.procName such that Follows*(26, 33) such that Next*(11, 23) 
Hc, I, K
5000
24 - Follows*, Affects, does not affect anything here (Valid)
constant c; stmt s; assign a; call calls;
Select calls such that Follows*(calls, a) such that Affects(a, s)
none
5000
25 - Follows*, Affects* (Valid)
procedure p; stmt s; assign a, a1;
Select p such that Follows*(25, s) and Affects*(a, a1) pattern a1("J", "J+74")
Hc, I, K
5000
26 - Parent, Follows, pattern while with wildcard (Valid)
while w; stmt s, s1; variable v; assign a;
Select w.stmt# such that Parent(w, a) pattern w(v, _) such that Follows(s, s1)
24
5000
27 - Parent, Parent*, 1 common synonym, with stmt# = attr (Valid)
if ifs, ifs1; while w;
Select ifs1 with 27 = ifs1.stmt# such that Parent(w, ifs) such that Parent*(ifs, ifs1)
27
5000
28 - Parent, Uses, 1 common synonym (Valid)
stmt s; if ifs; while w; print p; variable v;
Select p such that Parent(ifs, p) and Uses(p, v) with "hH" = v.varName
29
5000
29 - Parent, Modifies, 1 common synonym (Valid)
stmt s; read r; while w;
Select r such that Parent(w, r) pattern w("M", _) such that Modifies(r, "TG")
25
5000
30 - Parent, Calls (Valid)
procedure p, q; assign a; if ifs;
Select p such that Parent(ifs, a) and Calls(p, _) with p.procName = "Hc"
Hc
5000
31 - Parent, Next*, 1 common synonym, variable synonym not used (Valid)
stmt s; read r1, r2; while w; variable v;
Select r1 such that Parent(w, r1) with r1.varName = v.varName such that Next*(r1, r2)
8, 25, 33
5000
32 - Parent, Affects* (Valid)
stmt s; assign a1, a2; while w;
Select a1.stmt# such that Parent(w, a1) and Affects*(a1, a2)
15
5000
33 - Uses, Follows* (Valid)
stmt s1, s2; procedure p; variable v;
Select v with v.varName = "kA" such that Uses(p, v) with "I" = p.procName such that Follows*(s1, s2)
kA
5000
34 - Uses, Parent (Valid)
stmt s; call c; variable v; assign a; if ifs;
Select BOOLEAN such that Uses(c, "hH") and Parent(ifs, a)
TRUE
5000
35 - Uses, Uses, tuple, varName = IDENT (Valid)
variable v; assign a; print p;
Select <p, a> such that Uses(p, v) and Uses(a, v) with v.varName = "hH"
none
5000
36 - Uses, Modifies, 2 common synonyms (Valid)
variable v; assign a; 
Select v such that Uses(a, v) and Modifies(a, v)
J
5000
37 - Uses, Calls (Valid)
variable v; procedure p;
Select v such that Uses(p, v) with p.procName = "Hc" such that Calls(p, _)
TG, kA, M, hH, J
5000
38 - Uses, Next, 1 common synonym (Valid)
variable v; print p; while w;
Select p such that Uses(p, v) and Next(p, w)
1, 13
5000
39 - Uses, Affects (Valid)
variable v; assign a, a1;
Select a such that Uses(a, v) such that Affects(a, a1)
15, 21
5000
40 - Modifies, Follows, 1 common synonym(Valid)
stmt s; assign a; variable v; if ifs;
Select a such that Modifies(a, v) and Follows(a, ifs)
15
5000
41 - Modifies, Parent*, with (Valid)
read r; while w; variable v; prog_line n;
Select r with r.stmt# = 33 such that Modifies(r, v) such that Parent*(n, r)
33
5000
42 - Modifies, Uses, BOOLEAN (Valid)
variable v1, v2; assign a1, a2;
Select BOOLEAN such that Modifies(a1, v1) and Uses(a2, v2) with v1.varName = v2.varName
TRUE
5000
43 - Modfies, Modifies (Valid)
variable v; assign a; read r; 
Select v.varName such that Modifies(r, v) such that Modifies(a, v)
TG, kA, hH, J
5000
44 - Modifies, Calls, no commmon synonyms, return type diff (Valid)
procedure p, q; variable v; assign a; call c;
Select a.stmt# such that Modifies(c, v) and Calls(p, q) with p.procName = c.procName
none
5000
45 - Modifies, Next*, no common synonyms,  (Valid)
stmt s, s1; assign a;
Select s with a.stmt# = s.stmt# such that Modifies(s, "TG") and Next*(a, s1)
7, 30
5000
46 - Modifies, Affects (Valid)
stmt s; assign a, a1;
Select s such that Modifies(a, "M") such that Affects(a, a1)
none
5000
47 - Calls, Follows*, no common synonyms, attr=attr (Valid)
procedure p, q; call c; stmt s;
Select p with q.procName = c.procName such that Calls(p, q) and Follows*(c, s)
Hc, I
5000
48 - Calls, Parent, no common synonyms, return type diff (Valid)
procedure p; if ifs; stmt s1, s2;
Select ifs with 26 = ifs.stmt# such that Calls(p, "K") such that Parent(s1, s2)
26
5000
49 - Calls, Uses, return type tuple (Valid)
procedure p, q; while w;
Select <p, w, q> such that Calls(p, q) and Uses(w, "hH")
Hc 2 K, Hc 14 K, Hc 24 K, I 2 K, I 14 K, I 24 K
5000
50 - Next, Follows, 1 common synonym (Valid)
stmt s;
Select s such that Next(s, 3) such that Follows(s, 10)
2
5000
51 - Next, Parent*, 1 common integer (Valid)
stmt s; while w;
Select w such that Next(18, 21) and Parent*(w, 21)
14
5000
52 - Next, Uses (Valid)
variable v; prog_line n; if ifs;
Select n such that Next(n, ifs) such that Uses(n, v) with v.varName = "M"
15, 16, 26
5000
53 - Next, Modifies (Valid)
variable v; print p; stmt s;
Select <p, v> such that Next(p, s) and Modifies(s, v) with p.varName = v.varName
1 TG, 13 hH
5000
54 - Next, Calls (Valid)
procedure p; stmt s; call c;
Select c with p.procName = c.procName such that Next(s, c) such that Calls(p, "K") 
none
5000
55 - Next, Next*, no common synonym, pattern (Valid)
procedure pr; print p; stmt s, s1; while w; variable v;
Select p such that Next(p, w) pattern w(v, _) such that Next*(s, s1)
none
5000
56 - Next, Affects, no common synonym, one has no ans (Valid)
assign a;
Select a such that Next(24, 25) and Affects(a, "M")
none
5000
57 - Next*, Follows* (Valid)
if ifs1, ifs2; prog_line n;
Select n such that Next*(ifs1, ifs2) such that Follows*(ifs1, n)
32, 33
5000
58 - Next*, Parent (Valid)
stmt s; assign a; read r; while w;
Select a.stmt# such that Next*(a, r) and Parent(w, r)
4, 5, 6, 7, 9, 32, 28, 30, 31
5000
59 - Next*, Uses, prog_line (Valid)
prog_line n1, n2; print p; 
Select n1 such that Next*(n1, n2) with p.stmt# = n1 such that Uses(p, "hH")
13, 29
5000
60 - Next*, Modifies (Valid)
stmt s; read r; while w; variable v;
Select w such that Next*(r, w) and Modifies(w, v)
2, 14, 24
5000
61 - Next*, Calls, pattern removes all valid while (Valid)
stmt s; while w; procedure p, q; variable v;
Select s such that Next*(s, w) pattern w(v, _) such that Calls(p, q)
24, 25, 26, 27, 28, 29, 30, 31, 32, 33
5000
62 - Next*, Next*, 1 common integer (Valid)
stmt s; prog_line n; 
Select s such that Next*(s, 14) and Next*(14, n)
11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
63 - Next*, Affects (Valid)
stmt s; if ifs; assign a1, a2;
Select s with a1.stmt# = s.stmt# such that Next*(ifs, s) such that Affects(a1, a2)
15, 21
5000
64 - Next*, Affects*, 1 common synonym (Valid)
stmt s; assign a1, a2;
Select a1 such that Next*(a1, s) and Affects*(a1, a2)
15, 21
5000
65 - Affects, Follows (Valid)
stmt s; assign a1, a2;
Select a2 such that Affects(a1, a2) pattern a1(_, _"6"_) such that Follows(a1, s)
19, 21
5000
66 - Affects, Parent (Valid)
stmt s; assign a; if ifs;
Select s such that Affects(a, s) and Parent(ifs, a)
23
5000
67 - Affects, Uses (Valid)
stmt s; assign a1, a2; 
Select a1.stmt# such that Affects(a1, a2) and Uses(a1, "M")
15
5000
68 - Affects, Modifies, 1 common synonym, return type diff (Valid)
stmt s; variable v; procedure p; assign a;
Select p such that Affects(s, a) such that Modifies(a, v)
Hc, I, K
5000
69 - Affects, Next* (Valid)
stmt s; assign a; read r; print p;
Select BOOLEAN such that Affects(a, s) with a.stmt# = 4 such that Next*(r, p)
FALSE
5000
70 - Affects, Affects*, 2 common synonyms (Valid)
stmt s; assign a;
Select s.stmt# such that Affects(a, s) and Affects*(a, s)
19, 21, 23
5000
71 - Affects*, Follows*, no common synonym (Valid)
stmt s; assign a; prog_line n;
Select BOOLEAN such that Affects*(a, n) and Follows*(1, 9)
FALSE
5000
72 - Affects*, Parent*, 1 common synonym, pattern (Valid)
stmt s; while w; assign a;
Select s.stmt# such that Affects*(s, a) such that Parent*(w, s) pattern w(_,_)
none
5000
73 - Affects*, Uses (Valid)
stmt s; assign a; variable v;
Select s such that Affects*(a, s) and Uses(s, v)
19, 21, 23
5000
74 - Affects*, Modifies (Valid)
stmt s; assign a; variable v;
Select s with 21 = s.stmt# such that Affects*(a, s) and Modifies(s, v)
21
5000
75 - Affects*, Calls (Valid)
stmt s; assign a;
Select s such that Affects*(a, s) and Calls("I", "K")
19, 21, 23
5000
76 - Affects*, Next* (Valid)
stmt s; assign a; procedure p;
Select <p.procName, a, s> such that Affects*(a, s) and Next*(11, 23)
Hc 21 23,I 21 23,K 21 23,Hc 15 23,I 15 23,K 15 23,Hc 21 19,I 21 19,K 21 19,Hc 15 19,I 15 19,K 15 19,Hc 21 21,I 21 21,K 21 21,Hc 15 21,I 15 21,K 15 21
5000
77 - Affects*, Affects* (Valid)
stmt s; assign a; procedure p; prog_line n1, n2;
Select <p, a, s.stmt#> with "K" = p.procName such that Affects*(a, s) and Affects*(n1, n2)
K 15 19, K 15 21, K 15 23, K 21 23
5000
78 - Pattern Pattern (Valid)
assign a;
Select a.stmt# pattern a(_, _) pattern a(_, _"4"_)
7, 32
5000
79 - Pattern Pattern (Valid)
if ifs;
Select ifs pattern ifs("TG", _, _) pattern ifs("M", _, _)
16, 18, 27
5000
80 - Pattern Pattern (Valid)
while w; variable v;
Select w pattern w(v, _) pattern w("hH", _)
24
5000