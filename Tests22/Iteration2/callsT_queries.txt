1 - Both input wildcards (valid)
stmt s;
Select s such that Calls*(_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
5000
2 - First wildcard, second synonym (valid)
procedure p; read r;
Select r such that Calls*(_, p)
1, 5, 16
5000
3 - First synonym, second wildcard (valid)
print pr; procedure p;
Select pr such that Calls*(p, _)
14
5000
4 - First procName, second wildcard (valid)
print pr;
Select pr such that Calls*("three", _)
14
5000
5 - First wildcard, second procName (valid)
while w;
Select w such that Calls*(_, "finalProcedure")
8
5000
6 - First wildcard, second invalid procedure name given (invalid)
read r;
Select r such that Calls*(_, "startProcedure")
none
5000
7 - First invalid procedure name, second wildcard (invalid)
print pr;
Select pr such that Calls*("first", _)
none
5000
8 - First wildcard, second invalid type given (invalid)
stmt s; assign a;
Select s such that Calls*(_, a)
none
5000
9 - First invalid type given, second wildcard given (invalid)
stmt s; while w;
Select s such that Calls*(w, _)
none
5000
10 - Both input synonyms (valid)
procedure p, p1;
Select p such that Calls*(p, p1)
one, two, three, midProcedure
5000
11 - First synonym, second procName (valid)
procedure p; 
Select p such that Calls*(p, "three")
one, two
5000
12 - First procName, second synonym (valid)
procedure p; 
Select BOOLEAN such that Calls*("midProcedure", p)
TRUE
5000
13 - Both procName (valid)

Select BOOLEAN such that Calls*("midProcedure", "finalProcedure")
TRUE
5000
14 - First synonym, second procName but no double quotes (invalid)
procedure p; 
Select BOOLEAN such that Calls*(p, four)
none
5000
15 - First invalid synonym type, second synonym (invalid)
procedure p; constant c;
Select BOOLEAN such that Calls*(c, p)
none
5000
16 - First synonym, second invalid synonym type (invalid)
procedure p; variable v; print pr;
Select pr such that Calls*(p, v)
none
5000
17 - First procName, second wildcard (invalid; because procName does not call)
procedure p; 
Select p such that Calls*("four", _)
none
5000
18 - First procName, second procName (invalid; because second procName does not exist)
procedure p; 
Select p such that Calls*("main", _)
none
5000
19 - First procName, second synonym (invalid; because procName does not call)
while w; procedure p;
Select w such that Calls*("four", p)
none
5000
20 - First procName, second synonym (invalid; because procName does not exist)
read r; 
Select r such that Calls*("twenty", p)
none
5000
21 - First synonym, second synonym (invalid; because both are the same synonym)
procedure p; stmt s;
Select s such that Calls*(p, p)
none
5000
22 - First procName, second procName (invalid; it cannot call itself)
variable v; 
Select v such that Calls*("midProcedure", "midProcedure")
none
5000
23 - First procName, second procName (invalid; "three" does not call "midProcedure")
while w;
Select w such that Calls*("three", "midProcedure")
none
5000
24 - First synonym, second synonym, tuple (valid)
procedure p1, p2; while w;
Select <p1, w> such that Calls*(p1, p2)
one 8, two 8, three 8, midProcedure 8
5000
25 - First synonym, second procName, tuple (valid)
procedure p; print pr;
Select <p, pr> such that Calls*(p, "finalProcedure")
one 14, two 14, three 14, midProcedure 14
5000
26 - First synonym, second procName (invalid; procName does not call)
procedure p; stmt s;
Select s such that Calls*("finalProcedure", p)
none
5000