1 - Uses and modifies 1 common synonym (Valid)
variable v;
Select v such that Uses(8, v) such that Modifies(8, v)
fries
5000
2 - Uses and modifies such that and 1 common synonym (Valid)
variable v;
Select v such that Uses(8, v) and Modifies(8, v)
fries
5000
3 - Modifies and Uses 1 common (Valid)
variable v;
Select v such that Modifies(7, v) and Uses(7, v)
burrito
5000
4 - Modifies and Uses 1 common synonym (Valid)
variable v; stmt s;
Select v such that Modifies("starcey", v) such that Uses(22, v)
none
5000
6 - Modifies and uses 2 common synonym (Valid)
variable v; while w;
Select w such that Modifies(w, v) such that Uses(w, v)
6, 25
5000
7 - Uses and Modifies, no common synonym (Valid)
variable v; procedure p;
Select p such that Uses(4, "cheese") and Modifies(p, v)
elaine, starcey, grace
5000
8 - Uses and Modifies, no common synonym (Valid)
procedure p; variable v; read r;
Select BOOLEAN such that Modifies(r, "pizza") and Uses(p, v)
TRUE
5000
9 - Uses and Modifies, no common synonym, 1 wildcard (Valid)
variable v; if ifs; while w;
Select BOOLEAN such that Uses(9, "burrito") and Modifies(ifs, _)
TRUE
5000
10 - Uses and Modifies, no common synonym (Valid)
variable v; if ifs; while w;
Select v such that Modifies(w, "currentCoins") and Uses(17, _)
burrito,cheese,veg,pizza,var1,var2,fries,onion,answer,receipt,currentCoins,coins
5000
11 - Uses and Follows, 1 common synonym (Valid)
stmt s, s1;
Select s such that Uses(s, "var1") and Follows(s,s1)
4,6,5,16
5000
12 - Uses and Follows, 1 common synonym (Valid)
stmt s, s1;
Select BOOLEAN such that Follows(s,s1) such that Uses(s, "var1")
TRUE
5000
13 - Uses and Follows, 1 common synonym (Valid)
stmt s, s1; 
Select s such that Follows(17, s) and Uses(s, "pizza")
18
5000
14 - Uses and Follows, 1 synonym in common (Valid)
stmt s; assign a;
Select s such that Follows(a,s) such that Uses(a, "var1")
5
5000
15 - Uses and Follows, no common synonym (Valid)
call c; assign a;
Select c such that Uses(10, "pizza") such that Follows(c, a)
none
5000
16 - Uses and Follows, no common synonym (Valid)
assign a1, a2; call c; variable v;
Select v such that Follows(a1,a2) such that Uses(c, v)
var1, coins, currentCoins
5000
17 - Uses and Follows, no common synonym, 1 wildcard (Valid)
stmt s; print p; while w;
Select p such that Uses(p, "coins") and Follows(w, _)
27
5000
18 - Uses and Follows* 0 common 1 doesnt exists (Valid)
variable v; assign a; procedure p;
Select v such that Uses(p, "onion") such that Follows*(a, a)
none
5000 
19 - Uses and Follows* 1 common 2 doesnt exists (Valid)
variable v; assign a;
Select v such that Follows*(a,a) and Uses(a, "onion")
none
5000
20 - Uses and Follows*, both ans dont exist (Valid)
stmt s; if ifs; while w;
Select s such that Uses(s, "VAR1") and Follows*(ifs, w)
none
5000
21 - Uses and Parent, 1 common synonym (Valid)
stmt s; while w;
Select s such that Parent(w, s) such that Uses(s, "fries")
8
5000
22 - Uses and Parent, 0 common synonym, return diff (Valid)
stmt s; while w, if ifs; print pr; procedure p;
Select p such that Uses(pr, "burrito") and Parent(w, ifs)
none
5000
23 - Uses and Parent*, 1 common synonym (Valid)
stmt s; while w; if ifs; 
Select w such that Uses(w, "var1") such that Parent*(w, ifs)
6
5000
24 - Uses and Parent*, 0 common synonym (Valid)
stmt s; assign a; while w;
Select s such that Parent*(w, a) and Uses(s, "fries")
6, 8
5000
25 -  Modifies and Parent, 1 common synonym, 1 does not exist (Valid)
stmt s; read r; if ifs; variable v;
Select s such that Modifies(r, "var1") such that Parent(ifs, r)
none
5000
26 - Modifies and Parent, 0 common synonym, 1 does not exist (Valid)
stmt s; read r; if ifs; variable v;
Select s such that Parent(ifs, r) and Modifies(s, "var2")
none
5000
27 - Modifies and Parent*, 1 common synonym (Valid)
stmt s; read r; if ifs; variable v;
Select BOOLEAN such that Modifies(r, "var1") such that Parent*(ifs, r)
FALSE
5000
28 - Modifies and Parent*, 0 common synonym (Valid)
stmt s; while w; if ifs; assign a;
Select s such that Parent*(w, ifs) and Modifies(a, "pizza")
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
5000
29 - Modifies and Follows, 1 common synonym (Valid)
stmt s; read r; print p;
Select r such that Modifies(r, "receipt") such that Follows(r, p)
21
5000
30 - Modifies and Follows, 0 common synonym (Valid)
stmt s; read r; assign a;
Select a such that Follows(10, a) and Modifies(r, "pizza")
11
5000
31 - Modifies and Follows*, 1 common synonym (Valid)
stmt s; call c; assign a;
Select c.procName such that Modifies(c, "currentCoins") such that Follows*(c, a)
grace
5000
32 - Modifies and Follows*, 0 common synonym (Valid)
stmt s; read r; 
Select s such that Follows*(s, 12) and Modifies(r , "pizza")
none
5000
33 - Parent and Follows, 1 common synonym (Valid)
stmt s; if ifs; while w; procedure p;
Select <ifs, p> such that Parent(w, ifs) such that Follows(ifs, 15)
9 elaine, 9 starcey, 9 grace
5000
34 - Parent and Follows, 0 common synonym (Valid)
stmt s; while w; if ifs; 
Select w.stmt# such that Follows(6, 16) and Parent(w, ifs)
6
5000
35 - Parent and Follows*, 1 common synonym (Valid)
stmt s; while w; if ifs; 
Select ifs such that Parent(w, ifs) such that Follows*(w, 20)
9
5000
36 - Parent and Follows*, 0 common synonym, 1 does not exist (Valid)
stmt s; while w; if ifs; assign a; 
Select s such that Follows*(a, s) and Parent(ifs, w)
none
5000
37 - Parent* and Follows, 1 common synonym (Valid)
stmt s; while w; if ifs; assign a;
Select ifs.stmt# such that Parent*(w, ifs) such that Follows(ifs, a)
9
5000
38 - Parent* and Follows, 0 common synonym (Valid)
stmt s; while w; if ifs; assign a;
Select a such that Parent*(w, ifs) and Follows(a, ifs)
8
5000
39 - Parent* and Follows*, 1 common synonym (Valid)
while w; assign a;
Select a such that Parent*(w, _) and Follows*(w, a)
20
5000
40 - Pattern pattern 2 common (Valid)
assign a; variable v;
Select v pattern a(v, _"(var2/2+6)"_) pattern a(v, _"var1 * 10"_)
pizza
5000
41 - Pattern pattern 2 common (Valid)
assign a; variable v;
Select v pattern a(v, "var1 * 10 * cheese + (var2 / 2 + 6)") pattern a(v, _"var1 * 10"_)
pizza 
5000
42 - Pattern pattern 1 common (Valid)
assign a; variable v;
Select v pattern a(v, _"(var2/2+6)"_) pattern a(_, _"var1 * 10"_)
pizza 
5000
43 - Pattern pattern 1 common (Valid)
assign a; variable v;
Select v pattern a(v, _"(var2/2)"_) pattern a(_, _"var1 * 10"_)
pizza
5000
44 - Pattern pattern 0 common (Valid)
assign a; variable v;
Select v pattern a("pizza", _"(var2/2+6)"_) pattern a(_, _"var1 * 10"_)
burrito,cheese,veg,pizza,var1,var2,fries,onion,answer,receipt,currentCoins,coins
5000
45 - Parent*, Modifies, Calls 1 common synonym (Valid)
call c; procedure p; variable v; while w; if ifs;
Select p such that Parent*(w, ifs) such that Modifies(p, v) such that Calls(p, "starcey")
elaine
5000
46 - Parent*, Modifies, Calls 1 common synonym (Valid)
while w; procedure p; assign a; variable v;
Select <p.procName, v> such that Parent*(w, a) and Modifies(a, v) and Calls(p, "grace")
elaine burrito, elaine fries, elaine var1, elaine pizza, elaine coins
5000
47 - Parent*, Modifies, Calls* 1 common synonym (Valid)
call c; procedure p; variable v; while w; if ifs;
Select p.procName such that Parent*(w, ifs) and Modifies(p, v) and Calls*(p, "starcey")
elaine
5000
48 - Parent*, Modifies, Calls* 1 common synonym (Valid)
call c; procedure p; variable v; while w; if ifs;
Select p such that Parent*(w, ifs) and Modifies(p, v) and Calls*(p, _)
elaine
5000
49 - Uses, Uses, calls 1 common doesn't exist
variable v; procedure p; 
Select p such that Uses(p, "receipt") such that Uses(p1, v) such that Calls(p, p1)
none
5000
50 - Uses, Uses, calls 1 common 
variable v; procedure pro, pro1;
Select pro1 such that Uses(pro, "var1") such that Uses(pro1, v) such that Calls(pro, pro1)
starcey, grace
5000
51 - Uses, Modifies, Calls 1 common
variable v; procedure p, p1;
Select p1 such that Uses(p, "var1") such that Modifies(p1, "receipt") such that Calls(p, p1)
starcey
5000
52 - Uses, Modifies, Calls 1 common
variable v; stmt s; if ifs, ifs1;
Select v such that Uses(ifs, v) such that Modifies(ifs,v) such that Calls(_,_)
burrito,pizza,coins,currentCoins
5000
53 - Parent, Uses, Uses, Calls 1 common synonym (Valid)
procedure p; while w; assign a; 
Select <w, a.stmt#> such that Parent(w, a) and Uses(a, "burrito") and Uses(p, "fries") and Calls(p, _)
6 7
5000
54 - Uses, Modifies, Parent, Follows*, Calls 1 common synonym (Valid)
variable v; stmt s; if ifs, ifs1;
Select s such that Uses(ifs, v) such that Modifies(ifs,v) and Parent(ifs,ifs1) and Follows*(ifs,s) such that Calls(_,_)
none
5000
55 - Uses, Modifies, Parent, Follows*, Calls 1 common synonym (Valid)
variable v1; stmt s; if ifs, ifs1; procedure p, p1;
Select s such that Uses(ifs, v) such that Modifies(ifs,v1) and Parent(ifs,ifs1) and Follows*(ifs,s) such that Calls*(p,p1)
none
5000
56 - Boolean Uses, Modifies, Follows, Calls no common synonym (valid)
if ifs, ifs1; variable v, v1; stmt s; assign a,a1; while w, w1;
Select BOOLEAN such that Uses(ifs, v1) such that Modifies(ifs1,v) and Parent(w1,_) and Follows(a,w) pattern a1(_, _"pizza * veg"_)
TRUE
5000
57 - Pattern, with, Uses, Modifies, Pattern 1 common synonym (valid)
constant c; while w; procedure proc; variable v, v1; prog_line n; assign a; 
Select <proc, a> pattern w(v, _) with n = c.value such that Uses(n, v1) and Modifies(proc, v1) pattern a(_, _"pizza"_)
grace 11,grace 15,grace 18,grace 20,elaine 11,elaine 15,elaine 18,elaine 20
5000
58 - Next, Follows* and with 1 common synonym (Valid)
stmt s, s1; assign a; 
Select a such that Follows* (a, s1) and Next (s1, s) and with s.stmt# = 11 
none
5000
59 - Boolean Next pattern if (Valid)
while w; if ifs; variable v;
Select BOOLEAN such that Next(w, ifs) pattern w(v, _) and ifs(v, _, _)
FALSE
5000
60 - Boolean Pattern If Next* with (Valid)
if ifs; stmt s; prog_line n; variable v; stmt s1;
Select BOOLEAN pattern ifs(v, _, _) such that Next*(n, n) with ifs.stmt# = s.stmt# such that Parent(s, n) 
TRUE
5000
61 - Boolean Follows Uses Modifies (Valid)
stmt s; variable v; read r;
Select BOOLEAN such that Follows(256, s) Uses(s, v) such that Modifies(r, v)
none
5000
62 - Tuple pattern Follows with Parent (Valid)
if ifs; variable v; read r1; stmt s, s1; 
Select <ifs, r1> pattern ifs(v, _, _) such that Follows*(s, r1) with v.varName = r1.varName such that Parent(ifs, s1)
none
5000
63 - Modifies, Next* with pattern (Valid)
read r; prog_line n; assign a; variable v;
Select v such that Modifies(r, "pizza") and Next*(n, 6) with n = a.stmt# and pattern a(v, _)
none
5000
64 - With Follows Parent* (Valid)
while w; variable v; stmt s; prog_line n; if ifs;
Select w with s.stmt# = n such that Follows(w, ifs) such that Parent*(w, s)
6
5000
65 - Uses Calls pattern Modifies (Valid) 
procedure proc1, proc2; variable v; assign a;
Select v such that Uses(proc1, v) and Calls(proc2, proc1) pattern a(v, _) such that Modifies(proc1, v)
currentCoins,coins
5000
66 - Follows pattern Uses Modifies (Invalid)
assign a; stmt s; variable v;
Select s such that Follows (s, 3) pattern a("v, _) such that Uses(s, v) and Modifies(v, _)
none
5000
67 - Tuple Next* with Uses (Valid)
print p; variable v; prog_line n1, n2;
Select <v, p> such that Next*(n1, n2) with p.stmt# = n1 such that Uses(p, v)
none
5000
68 - Modifies Modifies Calls* with (Valid)
procedure p, q; prog_line n; variable v; call c;
Select p such that Modifies(n, v) and Modifies(p, v) such that Calls*(p, q) with c.procName = p.procName
none
5000
69 - with Modifies Parent Uses Next* (Valid)
while w; stmt s; if ifs; assign a; variable v;
Select a with a.stmt#=s.stmt# such that Modifies(a, v) such that Parent(w, ifs) and Uses(v, a) such that Next*(s, s)
none
5000
70 - Next* Parent with (Valid)
read r; while w; if ifs;
Select r.varName such that Next*(6, 20) such that Parent(w, ifs) with 21 = r.stmt#
receipt
5000
71 - boolean with attrRef Pattern Modifies Uses with attrRef 2 common synonym
while w; stmt s; if if1, if2; assign a; variable v; procedure p;
Select BOOLEAN with a.stmt#=s.stmt# pattern a(v, _"(var2 /2)"_) such that Modifies(p,v) and Uses(p,v) with p.procName = "elaine"
TRUE
5000
72 - boolean pattern next* with Parent* 2 common synonym (Valid)
if ifs; prog_line pl; stmt s; variable v;
Select BOOLEAN pattern ifs(v, _, _) such that Next*(n, n) with s.stmt# = ifs.stmt# such that Parent*(s, n)
none
5000
73 - boolean Uses Calls pattern Modifies (Valid) 
variable v; procedure p1, p2; assign a;
Select BOOLEAN such that Uses(p1, v) and Calls(p2, p1) pattern a(v, _) such that Modifies(p1, v)
TRUE
5000
74 - pattern with Uses Modifies Pattern (Valid)
variable v; while w; variable v1; prog_line n; assign a; procedure proc; constant c;
Select v pattern w(v1, _) with c.value = n such that Uses(n, v) and Modifies(proc, v) pattern a(_, _"5"_)
burrito,cheese,pizza,var1,fries,currentCoins,coins
5000
75 - pattern with Uses Parent Follows Next (Valid)
assign a; stmt s; variable v; if ifs; print pn; while w;
Select a pattern a(ifs, _) with a.stmt# = s.stmt# such that Uses(s, v) and Parent(w, _) and Follows(a, w) and Next(w, _)
none
5000
76 - Uses Uses Calls With (valid)
variable v; procedure p, p1;
Select p1.procName such that Uses(p, "cheese") such that Uses(p1, v) such that Calls(p, p1) with p.procName = "elaine"
starcey,grace
5000
77 - Parent Uses Uses Calls With (Valid)
variable v; if ifs; call c; procedure p, p1; stmt s; prog_line n;
Select p such that Parent(ifs,c) such that Uses(ifs, v) such that Uses(p, v) such that Calls(p, p1) with s.stmt# = n
elaine
5000
78 - Uses Modifies Parent Follows* Calls* (Valid)
variable v; stmt s; if ifs, ifs1;
Select s such that Uses(ifs, v) such that Modifies(ifs,v) and Parent(ifs,ifs1) and Follows*(ifs,s) such that Calls(_,_)
none
5000
79 - progline with attrRef (Valid)
prog_line n; call c;
Select <c, n> with c.stmt# = n
5 5,13 13,17 17,19 19
5000
80 - with attrRef (Valid)
constant c;
Select c with 20 = c.value 
20
5000
81 - with attrRef (Valid)
constant c,c1; stmt s; call ca;
Select <s,ca.procName> with s.stmt#= ca.stmt#
5 starcey,13 grace,17 grace,19 starcey
5000
82 - with attrRef (Valid)
constant c,c1; while w;
Select w.stmt# with w.stmt#= 6
6
5000
83 - with Modifies Uses Calls (Valid)
while w; stmt s; if if1, if2; assign a; variable v; procedure p;
Select a with a.stmt#=s.stmt# such that Modifies(a,v) and Uses(a,v) such that Calls(p,_)
7,8,15
5000
84 - tuple Next* with Uses 1 common synonym (Valid)
prog_line n1, n2; print p; variable v;
Select <p.varName, v> such that Next*(n1, n2) with n1 = p.stmt# such that Uses(p, v)
none
5000