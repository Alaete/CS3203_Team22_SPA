1 - First wildcard, second wildcard (Valid)
procedure p;
Select p such that Follows(_, _)
mos, subway
5000
2 - First stmt#, second wildcard (Valid)

Select BOOLEAN such that Follows(1, _)
TRUE
5000
3 - First stmt#, second wildcard (Valid; check if anything follows the last statement of first procedure)

Select BOOLEAN such that Follows(22, _)
FALSE
5000
4 - First wildcard, second stmt# (Valid)
stmt s;
Select s such that Follows(_, 3)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
5 - First wildcard, second stmt# (Valid; check if anything follows before the first statement of first procedure)
read r;
Select r such that Follows(_, 1)
none
5000
6 - First synonym, second wildcard (Valid; 22 and 25 are omitted because they don't fulfill this condition)
stmt s;
Select s such that Follows(s, _)
1, 2, 3, 4, 5, 6, 7, 10, 13, 15, 17, 20, 21, 23, 24
5000
7 - First synonym, second wildcard (Valid; 8 and 18 are omitted because nothing follows it)
assign a;
Select a such that Follows(a, _)
1, 2, 10, 17, 20, 24
5000
8 - First synonym, second wildcard (Valid)
read r;
Select r such that Follows(r, _)
4, 7, 21
5000
9 - First synonym, second wildcard (Valid)
print pr;
Select pr such that Follows(pr, _)
5, 23
5000
10 - First synonym, second wildcard (Valid)
call c;
Select c such that Follows(c, _)
none
5000
11 - First synonym, second wildcard (Valid)
while w;
Select w such that Follows(w, _)
3, 6, 15
5000
12 - First synonym, second wildcard (Valid)
if ifs;
Select ifs such that Follows(ifs, _)
13
5000
13 - First wildcard, second synonym (Valid)
stmt s;
Select s.stmt# such that Follows(_, s)
2, 3, 5, 6, 8, 9, 11, 13, 17, 18, 20, 21, 22, 24, 25
5000
14 - First wildcard, second synonym (Valid)
read r;
Select r such that Follows(_, r)
21
5000
15 - First wildcard, second synonym (Valid)
print pr;
Select pr such that Follows(_, pr)
5, 11, 22
5000
16 - First wildcard, second synonym (Valid)
call c;
Select c such that Follows(_, c)
25
5000
17 - First wildcard, second synonym (Valid)
while w; procedure p;
Select <w, p> such that Follows(_, w)
3 mos, 3 subway, 6 mos, 6 subway
5000
18 - First wildcard, second synonym (Valid)
if ifs;
Select BOOLEAN such that Follows(_, ifs)
TRUE
5000
19 - First wildcard, second synonym (Valid)
assign a;
Select a such that Follows(_, a)
2, 8, 17, 18, 20, 24
5000
20 - First stmt#, second synonym (Valid)
stmt s1, s2;
Select s2 such that Follows(1, s1)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
5000
21 - First stmt#, second synonym (Valid)
stmt s1;
Select s1 such that Follows(6, s1)
9
5000
22 - First synonym, second stmt# (Valid)
stmt s1;
Select s1 such that Follows(s1, 22)
21
5000
23 - First synonym, second stmt# (Valid)
stmt s1;
Select s1 such that Follows(s1, 7)
none
5000
24 - Double quotes number both inputs (Invalid; double quotes not allowed)
stmt s;
Select s such that Follows("1", "2")
none
5000
25 - Double quotes number both inputs (Invalid)
stmt s;
Select s such that Follows("21", "22")
none
5000
26 - Both synonyms (Both stmts) (Valid)
stmt s1, s2;
Select s1 such that Follows(s1, s2)
1, 2, 3, 4, 5, 6, 7, 10, 13, 15, 17, 20, 21, 23, 24
5000
27 - Both synonyms (read and print) (Valid)
print p; read r;
Select p.varName such that Follows(r, p)
o, bk
5000
28 - Both synonyms (read and call) (Valid)
call c; read r;
Select c.varName such that Follows(r, c)
none
5000
29 - Both synonyms (read and while) (Valid)
while w; read r;
Select w.stmt# such that Follows(r, w)
none
5000
30 - Both synonyms (read and if) (Valid)
if ifs; read r;
Select if.stmt# such that Follows(r, ifs)
none
5000
31 - Both synonyms (read and assign) (Valid)
assign a; read r;
Select a.stmt# such that Follows(r, a)
8
5000
32 - Both synonyms (read and read) (Valid)
read r1, r2;
Select r1.stmt# such that Follows(r1, r2)
none
5000
33 - Both synonyms (print and read) (Valid)
print p; read r;
Select r.varName such that Follows(p, r)
none
5000
34 - Both synonyms (print and call) (Valid)
print p; call c;
Select c.procName such that Follows(p, c)
none
5000
35 - Both synonyms (print and while) (Valid)
print p; while w;
Select w.stmt# such that Follows(p, w)
6
5000
36 - Both synonyms (print and if) (Valid)
print p; if ifs;
Select BOOLEAN such that Follows(p, ifs)
FALSE
5000
37 - Both synonyms (print and assign) (Valid)
print p; assign a;
Select BOOLEAN such that Follows(p, a)
TRUE
5000
38 - Both synonyms (print and print) (Valid)
print p1, p2;
Select BOOLEAN such that Follows(p1, p2)
FALSE
5000
39 - Both synonyms (call and read) (Valid)
call c; read r;
Select BOOLEAN such that Follows(c, r)
FALSE
5000
40 - Both synonyms (call and print) (Valid)
call c; print p;
Select BOOLEAN such that Follows(c, p)
FALSE
5000
41 - Both synonyms (call and while) (Valid)
call c; while w;
Select <c, w> such that Follows(c, w)

5000
42 - Both synonyms (call and if) (Valid)
call c; if ifs;
Select <c, ifs> such that Follows(c, ifs)

5000
43 - Both synonyms (call and assign) (Valid)
call c; assign a;
Select BOOLEAN such that Follows(c, a)
FALSE
5000
44 - Both synonyms (call and call) (Valid)
call c1, c2;
Select BOOLEAN such that Follows(c1, c2)
FALSE
5000
45 - Both synonyms (while and read) (Valid)
while w; read r;
Select BOOLEAN such that Follows(w, r)
FALSE
5000
46 - Both synonyms (while and print) (Valid)
while w; read r;
Select BOOLEAN such that Follows(w, r)
FALSE
5000
47 - Both synonyms (while and if) (Valid)
while w; if ifs;
Select <w, ifs> such that Follows(w, ifs)
3 13, 6 9
5000
48 - Both synonyms (while and assign) (Valid)
while w; assign a;
Select a.stmt# such that Follows(w, a)
17
5000
49 - Both synonyms (while and while) (Valid)
while w1, w2;
Select BOOLEAN such that Follows(w1, w2)
FALSE
5000
50 - Both synonyms (if and read) (Valid)
if ifs; read r;
Select ifs.stmt# such that Follows(ifs, r)
none
5000
51 - Both synonyms (if and print) (Valid)
if ifs; print p;
Select p.varName such that Follows(ifs, p)
none
5000
52 - Both synonyms (if and call) (Valid)
if ifs; call c;
Select c.procName such that Follows(ifs, c)
none
5000
53 - Both synonyms (if and while) (Valid)
if ifs; while w;
Select w.stmt# such that Follows(ifs, w)
none
5000
54 - Both synonyms (if and assign) (Valid)
if ifs; assign a;
Select a.stmt# such that Follows(ifs, a)
20
5000
55 - Both synonyms (if and if) (Valid)
if ifs1, ifs2;
Select ifs1.stmt# such that Follows(ifs1, ifs2)
none
5000
56 - Both synonyms (assign and read) (Valid)
assign a; read r;
Select r.varName such that Follows(a, r)
kfc
5000
57 - Both synonyms (assign and print) (Valid)
assign a; print p;
Select p.varName such that Follows(a, p)
pb
5000
58 - Both synonyms (assign and call) (Valid)
assign a; call c;
Select c.procName such that Follows(a, c)
mos
5000
59 - Both synonyms (assign and while) (Valid)
assign a; while w;
Select <a.stmt#, w.stmt#> such that Follows(a, w)
2 3
5000
60 - Both synonyms (assign and if) (Valid)
assign a; if ifs;
Select ifs.stmt# such that Follows(a, ifs)
none
5000
61 - Both synonyms (assign and assign) (Valid)
assign a1, a2;
Select a1 such that Follows(a1, a2)
1, 17
5000
62 - First wrong type, second synonym (Invalid)
variable v1; stmt s2;
Select s2 such that Follows(v1, s2)
none
5000
63 - First synonym, second wrong type (Invalid)
stmt s; variable v;
Select s such that Follows(s, v)
none
5000
64 - First wrong type, second synonym (Invalid)
constant c; stmt s;
Select s such that Follows(c, s)
none
5000
65 - First synonym, second wrong type (Invalid)
constant c; stmt s;
Select s such that Follows(s, c)
none
5000
66 - First stmt#, second wrong type (Invalid)
stmt s; constant c;
Select s such that Follows(1, c)
none
5000
67 - First wrong type, second stmt# (Invalid)
stmt s; constant c;
Select s such that Follows(c, 2)
none
5000
68 - First stmt#, second wrong type (Invalid)
stmt s; variable v;
Select s such that Follows(1, v)
none
5000
69 - First wrong type, second stmt# (Invalid)
stmt s; variable v;
Select s such that Follows(v, 22)
none
5000
70 - First synonym, second stmt# (Valid)
stmt s;
Select s such that Follows(s, 2)
1
5000

